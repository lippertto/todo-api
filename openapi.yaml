openapi: "3.0.3"
info:
  description: "This is the Code Intelligence Todo-API"
  version: "1.0.0"
  title: "Todo-API"
  contact:
    email: "tobias.lippert@fastmail.com"
servers:
  - url: http://localhost:8080/v1
    description: Development server
tags:
  - name: "todo"
    description: "Everything about todos"
  - name: "tasks"
    description: "Access to the tasks of a todo"
paths:
  /todos:
    post:
      tags:
        - "todo"
      summary: "Add a new todo"
      requestBody:
        description: "Pet object that needs to be added to the store"
        "content":
          "application/json":
            schema:
              $ref: "#/components/schemas/Todo"
      responses:
        "201":
          description: "Successful creation"
          content:
            "application/json":
              schema: {$ref: "#/components/schemas/Todo"}
        "400":
          description: "Bad payload"
          content:
            "application/json":
              schema: {$ref: "#/components/schemas/Error"}
  /todos/{todoId}:
    get:
      tags:
        - "todo"
      summary: "Get an individual todo by id"
      parameters:
        - name: "todoId"
          in: "path"
          description: "ID of todo to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "Found todo"
          content:
            "application/json":
              schema: {$ref: "#/components/schemas/Todo"}
        "404":
          description: "Did not find todo"
          content:
            "application/json":
              schema: {$ref: "#/components/schemas/Error"}
    put:
      tags:
        - "todo"
      summary: "Update an existing todo"
      parameters:
        - name: "todoId"
          in: "path"
          description: "ID of todo to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        description: "Pet object that needs to be added to the store"
        "content":
          "application/json":
            schema:
              $ref: "#/components/schemas/Todo"
      responses:
        "200":
          description: "Updated todo"
          content:
            "application/json":
              schema: {$ref: "#/components/schemas/Todo"}
        "400":
          description: "Bad payload"
          content:
            "application/json":
              schema: {$ref: "#/components/schemas/Error"}
        "404":
          description: "Did not find todo"
          content:
            "application/json":
              schema: {$ref: "#/components/schemas/Error"}
components:
  schemas:
    Error:
      type: "object"
      properties:
        "error":
          type: "object"
          properties:
            "code":
              type: "string"
            "message":
              type: "string"
            "details":
              type: "string"
              nullable: true
    Todo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        tasks:
          type: "array"
          items:
            $ref: "#/components/schemas/Task"
          default:
            []
    Task:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"